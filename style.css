*, *::before, *::after {box-sizing: border-box;}
* {margin: 0;}
body {line-height: 1.5; -webkit-font-smoothing: antialiased;}
img, picture, video, canvas, svg {display: block; max-width: 100%;}
input, button, textarea, select {font: inherit; color: inherit;}
p, h1, h2, h3, h4, h5, h6, li {overflow-wrap: break-word;}
#root, #__next {isolation: isolate;}
input, button {background: none; border: none;}

*:focus, *:focus-visible {border: none; outline: none !important; }

:root {
    --darkerthandark: hsl(225, 15%, 96%);
    --white: hsl(0, 0%, 100%);
    --verylightgray: hsl(225, 15%, 95%);
    --lightgray: hsl(225, 15%, 70%);
    --dark: hsl(225, 15%, 15%);
}

*::placeholder {
    color: var(--lightgray);
}

@media (prefers-color-scheme: dark) {
    :root {
        --darkerthandark: hsl(225, 15%, 10%);
        --dark: hsl(0, 0%, 100%);
        --verylightgray: hsl(225, 15%, 25%);
        --lightgray: hsl(225, 15%, 65%);
        --white: hsl(225, 15%, 15%);
    }
}


body {
    font-family: "Radio Canada Big", sans-serif;
    padding: 4rem 0.5rem; 
    background-color: var(--darkerthandark);
    color: var(--dark);
    height: 100%;
}



#note-container {
    text-wrap: stable;
    width: min(100% - 1rem, 60ch);
    margin: auto;
    > * {
        margin: 0.5rem 0;
    }

}

#note-container  *[contenteditable]:empty:not(p)::after,
#note-container  p[contenteditable]:focus:empty::after {
    content: attr(data-placeholder);
    color: var(--lightgray);
    display: inline;
    font-style: italic;
}

form > div {
    display: flex;
    gap: 0.5rem;
    align-items: center;
}

svg path {
    fill: var(--lightgray);
}



#command-container:popover-open {
    padding: 0px;
    margin: auto;
    width: min(100% - 2rem, 600px); 

    backdrop-filter: blur(4rem);
    background-color: hsla(225, 15%, 100%, 0.01);
    outline: 1px solid var(--verylightgray);
    border-radius: 0.5rem;
    border: none;
}

#command-search {
    position: relative;
    min-height: 3rem;
    border-bottom: 1px solid var(--verylightgray);
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
    padding-inline: 1rem;

    svg {
        height: 1.25rem;
        width: 1.25rem;
    }

    button {
        cursor: pointer;
        padding: 0;
    }

    input {
        background: none;
        width: 100%;
        color: var(--dark);
    }

    input:focus {
        outline: none;
    }
}


#command-palette {
    border-radius: 0 0 0.5rem 0.5rem;
    overflow-y: scroll;
    max-height: 400px;

    ul {
        list-style: none;
        padding: 0px;
    }

    h4 {
        margin-bottom: 0.75rem;
        color: var(--lightgray);
        font: 500 1rem/1.2 "Radio Canada Big", sans-serif;
        padding-left: 0.5rem;
    }

    .command-section {
        padding: 1rem 0.5rem;
    }
}

.command-section:not(:first-of-type) {
    border-top: 1px solid var(--verylightgray);
}

.command-item button {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 0.5rem;
    border-radius: 0.5rem;
    text-align: left;
    width: 100%;
    cursor: pointer;
    h5 {font: 500 1rem/1.2 "Radio Canada Big", sans-serif; color: var(--dark); text-transform: capitalize;}
}

.command-item:focus-within,
.command-item:hover,
.command-item.select {
    background: var(--verylightgray);
    border-radius: 0.25rem;
    cursor: pointer;

    * {outline: none;}
}

.command-item:focus-within,
.command-item:focus,
.command-item:hover {
    outline: none;
}

.recent-commands::-webkit-scrollbar {
    display: none;
}

/* Hide scrollbar for IE, Edge and Firefox */
.recent-commands,
#command-palette {
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;  /* Firefox */
}


.written {
    color: red;
    position: absolute;
    line-height: 31px;
    inset:  0.5rem 3rem;
    pointer-events: none;
    color: transparent;

    .autocomplete {
        color: var(--lightgray);
        display: inline;
        height: 100%;
    }
}


@media screen and (max-width: 600px) {
    #command-container:popover-open {
        transition: height 0.2s ease-in-out;
        width: calc(100% - 1rem);
        margin: 0;
        inset: 0.5rem;
        top: unset;
        display: flex;
        flex-direction: column;
    }

    #command-palette {
        max-height: 100%;
    }
}